generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Candidate {
  id                String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt         DateTime             @default(now()) @map("created_at")
  updatedAt         DateTime             @updatedAt @map("updated_at")
  name              String
  surname           String
  candidateId       Int                  @unique @default(autoincrement())
  bio               String
  favourite         Boolean              @default(false)
  english_level     String
  age               String
  university        String
  university_start  String
  university_end    String
  university_degree String
  github_url        String
  website_url       String
  city              String
  interests         CandidateInterests[]
  stars             Int?
  points            Int?
  status            String
  skills            CandidateSkills[]
}

model Skill {
  id         Int               @id @default(autoincrement())
  name       String            @unique
  candidates CandidateSkills[]
}

model CandidateSkills {
  candidateId String    @db.Uuid
  skillId     Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  skill       Skill     @relation(fields: [skillId], references: [id])

  @@id([candidateId, skillId])
}

model Interest {
  id         Int                  @id @default(autoincrement())
  name       String               @unique
  candidates CandidateInterests[]
}

model CandidateInterests {
  candidateId String    @db.Uuid
  interestId  Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  interest    Interest  @relation(fields: [interestId], references: [id])

  @@id([candidateId, interestId])
}
